version: 2

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:latest
  environment:
    - SOURCE_BRANCH: master
    - TARGET_BRANCH: gh-pages

jobs:
  checkout_code:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: ~/repo
          paths: .

  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run: npm install
      ##  Why doesn't this fix the hack below?
      - add_ssh_keys:
          fingerprints:
            - "4e:be:6e:92:f9:87:56:0d:4d:77:30:d0:57:1d:45:04"
      - deploy:
          name: Deploy
          command: |
            if [ $CIRCLE_BRANCH == $SOURCE_BRANCH ]; then

              ## Hacky work-around
              ## We should load an RSA key, and use it to validate GitHub host
              ## Instead of forcing any/all hosts to work
              mkdir ~/.ssh/
              touch ~/.ssh/known_hosts
              ssh-keyscan github.com >> ~/.ssh/known_hosts

              git config --global user.email $GH_EMAIL
              git config --global user.name $GH_NAME

              git clone $CIRCLE_REPOSITORY_URL out

              cd out
              git checkout $TARGET_BRANCH || git checkout --orphan $TARGET_BRANCH
              git rm -rf .
              cd ..

              npm run build

              cp -a example/. out/.

              mkdir -p out/.circleci && cp -a .circleci/. out/.circleci/.
              cd out

              git add -A
              git commit -m "Automated deployment to GitHub Pages: ${CIRCLE_SHA1}" --allow-empty

              git push origin $TARGET_BRANCH
            fi

workflows:
  version: 2

  test_build_deploy:
    jobs:
      - checkout_code:
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - checkout_code
          filters:
            branches:
              only: master
